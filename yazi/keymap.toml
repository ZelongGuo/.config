# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

prepend_keymap = [
    { on = "l", run = 'plugin smart-enter', desc = "Enter the child directory, or open the file" },
    { on = "<Enter>", run = 'plugin smart-enter' },
    { on = "S", run = 'shell "$SHELL" --block --confirm' }, # open a shell in CWD
    # { on = [
    #     "'",
    #     "a",
    # ], run = "plugin yamb save", desc = "Add bookmark" },
    # { on = [
    #     "'",
    #     "'",
    # ], run = "plugin yamb jump_by_fzf", desc = "Jump bookmark by fzf" },
    # { on = [
    #     "'",
    #     "r",
    # ], run = "plugin yamb delete_by_key", desc = "Delete bookmark by key" },
    # { on = [
    #     "P",
    # ], run = "spot", desc = "Open spotter" },
    # { on = [
    #     "c",
    #     "a",
    # ], run = "plugin compress", desc = "Archive selected files" },
]

keymap = [
    { on = "<Esc>", run = "escape",             desc = "Exit visual mode, clear selection, or cancel search" },
    { on = "<C-[>", run = "escape",             desc = "Exit visual mode, clear selection, or cancel search" },
    # { on = "q",     run = "quit",             desc = "Quit the process" },
    { on = "q",     run = "close",              desc = "Close the current tab, or quit if it's last" },
    { on = "Q",     run = "quit --no-cwd-file", desc = "Quit without outputting cwd-file" },
    { on = "<C-z>", run = "suspend",            desc = "Suspend the process" },

     { on = "<F5>", run = "reload",             desc = "Refresh the current directory" },

    # Hopping
    { on = "i",      run = "arrow -1", desc = "Move cursor up" },
    { on = "k",      run = "arrow +1", desc = "Move cursor down" },
    { on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
    { on = "<Down>", run = "arrow +1", desc = "Move cursor down" },
    { on = "I",      run = "arrow -5", desc = "Move cursor up -5" },
    { on = "K",      run = "arrow +5", desc = "Move cursor down +5" },

    { on = "<C-u>", run = "arrow -50%",  desc = "Move cursor up half page" },
    { on = "<C-d>", run = "arrow 50%",   desc = "Move cursor down half page" },
    # { on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },
    # { on = "<C-f>", run = "arrow 100%",  desc = "Move cursor down one page" },
    { on = "<S-PageUp>",   run = "arrow -50%",  desc = "Move cursor up half page" },
    { on = "<S-PageDown>", run = "arrow 50%",   desc = "Move cursor down half page" },
    { on = "<PageUp>",     run = "arrow -100%", desc = "Move cursor up one page" },
    { on = "<PageDown>",   run = "arrow 100%",  desc = "Move cursor down one page" },

    { on = [ "g", "g" ], run = "arrow top", desc = "Go to top" },
    { on = "G",          run = "arrow bot", desc = "Go to bottom" },

    { on = "<C-j>", run = "seek -5", desc = "Move cursor up 5 units in the preview" },
    { on = "<C-l>", run = "seek 5",  desc = "Move cursor down 5 units in the preview" },

    # Navigation
    { on = "j", run = "leave",       desc = "Back to the parent directory" },
    { on = "l", run = "enter",       desc = "Enter the child directory" },
    { on = "J", run = "back",        desc = "Back to previous directory" },
    { on = "L", run = "forward",     desc = "Forward to next directory" },
    { on = "<Left>",  run = "leave", desc = "Back to the parent directory" },
    { on = "<Right>", run = "enter", desc = "Enter the child directory" },

    # Selection
    { on = "<Space>", run = [ "toggle", "arrow 1" ], desc = "Toggle the current selection state" },
    { on = "v", run = "visual_mode",         desc = "Enter visual mode (selection mode)" },
    { on = "V", run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },
    # { on = "<C-a>",   run = "toggle_all --state=on",    desc = "Select all files" },
    # { on = "<C-r>",   run = "toggle_all",               desc = "Invert selection of all files" },

    # Hidden files
    { on = ["z", "h"], run = "hidden toggle", desc = "Toggle the visibility of hidden files" },

    # Open
    { on = "r", run = "open --interactive", desc = "Open selected files interactively" },

    # Create
    { on = "T", run = "create", desc = "Create a file (ends with / for directories)" },
    { on = "M", run = "create --dir", desc = "Create a directory" },

    # Rename
    { on = "a", run = "rename --cursor=before_ext", desc = "Rename selected file(s)" },
    { on = "A", run = "rename --cursor=end", desc = "Rename selected file(s)" },
    { on = ["c", "w"], run = "rename --empty=all", desc = "Rename selected file(s)" },

    # Operation: D
    { on = ["d", "d"], run = "yank --cut", desc = "Yank selected files (cut)" },
    { on = ["d", "t"], run = "remove",     desc = "Trash selected files" },
    { on = ["d", "D"], run = "remove --permanently", desc = "Permanently delete selected files" },

    # Operation: Y
    { on = ["y", "y"], run = "yank", desc = "Yank selected files (copy)" },
    { on = ["y", "p"], run = "copy path", desc = "Copy the file path" },
    { on = ["y", "d"], run = "copy dirname", desc = "Copy the directory path" },
    { on = ["y", "f"], run = "copy filename", desc = "Copy the filename" },
    { on = ["y", "n"], run = "copy name_without_ext", desc = "Copy the filename without extension" },
    { on = ["y", "c"], run = "unyank", desc = "Cancel the yank status" },

    # Operation: P
    { on = ["p", "p"], run = "paste", desc = "Paste yanked files" },
    { on = ["p", "P"], run = "paste --force", desc = "Paste yanked files (overwrite if the destination exists)" },
    { on = ["p", "l"], run = "link", desc = "Symlink the absolute path of yanked files" },
    { on = ["p", "L"], run = "link --relative", desc = "Symlink the relative path of yanked files" },
    { on = ["p", "h"], run = "hardlink", desc = "Hardlink yanked files" },

    # Linemode, information show
    { on = ["m", "s"], run = "linemode size",  desc = "Set linemode to size" },
    { on = ["m", "p"], run = "linemode perm",  desc = "Set linemode to permissions" },
    { on = ["m", "c"], run = "linemode btime", desc = "Set linemode to btime" },
    { on = ["m", "m"], run = "linemode mtime", desc = "Set linemode to mtime" },
    { on = ["m", "o"], run = "linemode owner", desc = "Set linemode to owner" },
    { on = ["m", "n"], run = "linemode none",  desc = "Set linemode to none" },

    # Sorting
    { on = ["o", "M"], run = ["sort mtime --reverse=no", "linemode mtime"], desc = "Sort by modified time" },
    { on = ["o", "m"], run = ["sort mtime --reverse", "linemode mtime"], desc = "Sort by modified time (reverse)" },
    { on = ["o", "C"], run = ["sort btime --reverse=no", "linemode btime"], desc = "Sort by created time" },
    { on = ["o", "c"], run = ["sort btime --reverse", "linemode btime"], desc = "Sort by created time (reverse)" },
    { on = ["o", "E"], run = "sort extension --reverse=no", desc = "Sort by extension" },
    { on = ["o", "e"], run = "sort extension --reverse", desc = "Sort by extension (reverse)" },
    { on = ["o", "a"], run = "sort alphabetical --reverse=no", desc = "Sort alphabetically" },
    { on = ["o", "A"], run = "sort alphabetical --reverse", desc = "Sort alphabetically (reverse)" },
    { on = ["o", "n"], run = "sort natural --reverse=no", desc = "Sort naturally" },
    { on = ["o", "N"], run = "sort natural --reverse", desc = "Sort naturally (reverse)" },
    { on = ["o", "s"], run = ["sort size --reverse=no", "linemode size"], desc = "Sort by size" },
    { on = ["o", "S"], run = ["sort size --reverse", "linemode size"], desc = "Sort by size (reverse)" },

    # Operation: Find
    { on = "<C-f>", run = "plugin fzf",              desc = "Jump to a file/directory via fzf" },
    { on = "Z",     run = "plugin zoxide",           desc = "Jump to a directory via zoxide" },
    { on = "f",     run = "filter --smart",          desc = "Filter files" },
    { on = "/",     run = "find --smart",            desc = "Find next file" },
    # { on = "?",     run = "find --previous --smart", desc = "Find previous file" },
    { on = "n",     run = "find_arrow",              desc = "Go to the next found" },
    { on = "N",     run = "find_arrow --previous",   desc = "Go to the previous found" },

    # Goto
    { on = ["g", "/"], run = "cd /", desc = "Go to the root directory" },
    { on = ["g", "h"], run = "cd ~", desc = "Go to the home directory" },
    { on = ["g", "c"], run = "cd ~/.config", desc = "Go to the config directory" },
    { on = ["g", "n"], run = "cd ~/notes", desc = "Go to the notes directory" },
    { on = ["g", "C"], run = "cd ~/codes", desc = "Go to the codes directory" },
    { on = ["g", "w"], run = "cd ~/works", desc = "Go to the works directory" },
    { on = ["g", "d"], run = "cd ~/Documents", desc = "Go to the Documents directory" },
    { on = ["g", "m"], run = "cd ~/Movies", desc = "Go to the Movies directory" },
    { on = ["g", "s"], run = "cd ~/shared", desc = "Go to the shared directory" },
    { on = ["g", "<Space>"], run = "cd --interactive", desc = "Go to a directory interactively" },

    # Tabs
    { on = ["t", "n"], run = "tab_create --current", desc = "Create a new tab with CWD" },
    { on = ["t", "j"], run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
    { on = ["t", "l"], run = "tab_switch 1 --relative", desc = "Switch to the next tab" },
    #{ on = ["t", ""], run = "tab_swap -1", desc = "Swap current tab with previous tab" },
    #{ on = ["}"], run = "tab_swap 1", desc = "Swap current tab with next tab" },
    { on = "1", run = "tab_switch 0", desc = "Switch to the first tab" },
    { on = "2", run = "tab_switch 1", desc = "Switch to the second tab" },
    { on = "3", run = "tab_switch 2", desc = "Switch to the third tab" },
    { on = "4", run = "tab_switch 3", desc = "Switch to the fourth tab" },
    { on = "5", run = "tab_switch 4", desc = "Switch to the fifth tab" },
    { on = "6", run = "tab_switch 5", desc = "Switch to the sixth tab" },
    { on = "7", run = "tab_switch 6", desc = "Switch to the seventh tab" },
    { on = "8", run = "tab_switch 7", desc = "Switch to the eighth tab" },
    { on = "9", run = "tab_switch 8", desc = "Switch to the ninth tab" },

    # Tasks
    { on = "w", run = "tasks:show", desc = "Show task manager" },

    # Help
    { on = "?",    run = "help", desc = "Open help" },
    { on = "<F1>", run = "help", desc = "Open help" },

    # Operation: Shell
    { on = "<C-g>", run = "shell --confirm --block lazygit", desc = "Lazygit" },
    { on = ";",     run = "shell --interactive", desc = "Run a shell command" },
    { on = ":",     run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },

]

[tasks]

keymap = [
    { on = "<Esc>", run = "close", desc = "Close task manager" },
    { on = "<C-[>", run = "close", desc = "Close task manager" },
    { on = "<C-c>", run = "close", desc = "Close task manager" },
    { on = "w",     run = "close", desc = "Close task manager" },

    { on = "i", run = "arrow -1", desc = "Previous task" },
    { on = "k", run = "arrow 1", desc = "Next task" },
    { on = "<Up>",   run = "arrow -1", desc = "Previous task" },
    { on = "<Down>", run = "arrow 1", desc = "Next task" },

    { on = "<Enter>", run = "inspect", desc = "Inspect the task" },
    { on = "x",       run = "cancel",  desc = "Cancel the task" },

    # Help
    { on = "?",    run = "help", desc = "Open help" },
    { on = "<F1>", run = "help", desc = "Open help" },
]

[spot]

keymap = [
    # Navigation
    { on = "i", run = "arrow -1", desc = "Move up" },
    { on = "k", run = "arrow 1", desc = "Move down" },

    # Close
    { on = "<Esc>", run = "close", desc = "Close spotter" },
    { on = "q", run = "close", desc = "Close spotter" },

    # Swipe through files
    { on = "<C-i>", run = "swipe -5", desc = "Swipe 5 files up" },
    { on = "<C-k>", run = "swipe 5", desc = "Swipe 5 files down" },

    # Copy content
    { on = "y", run = "copy cell", desc = "Copy cell content" },

    # Help
    { on = "?",    run = "help", desc = "Open help" },
    { on = "<F1>", run = "help", desc = "Open help" },
]

[pick]

keymap = [
    { on = "<Esc>", run = "close", desc = "Cancel selection" },
    { on = "<C-[>", run = "close", desc = "Cancel selection" },
    { on = "<C-c>", run = "close", desc = "Cancel selection" },
    { on = "<Enter>", run = "close --submit", desc = "Submit the selection" },

    { on = "i", run = "arrow -1", desc = "Move cursor up" },
    { on = "k", run = "arrow 1", desc = "Move cursor down" },

    { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
    { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

    # Help
    { on = "?", run = "help", desc = "Open help" },
    { on = "<F1>", run = "help", desc = "Open help" },
]

[input]

keymap = [
    { on = "<C-c>",   run = "close",          desc = "Cancel input" },
    { on = "<Enter>", run = "close --submit", desc = "Submit the input" },
    { on = "<Esc>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },
    { on = "<C-[>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },

    # Mode
    { on = "h", run = "insert",                             desc = "Enter insert mode" },
    { on = "a", run = "insert --append",                    desc = "Enter append mode" },
    { on = "H", run = ["move -999", "insert"],              desc = "Move to the BOL, and enter insert mode" },
    { on = "A", run = ["move 999", "insert --append"],      desc = "Move to the EOL, and enter append mode" },
    { on = "v", run = "visual",                             desc = "Enter visual mode" },
    { on = "V", run = ["move -999", "visual", "move 999"],  desc = "Enter visual mode and select all" },

    # Character-wise movement
    { on = "j",         run = "move -1", desc = "Move back a character" },
    { on = "l",         run = "move 1",  desc = "Move forward a character" },
    { on = "<Left>",    run = "move -1", desc = "Move back a character" },
    { on = "<Right>",   run = "move 1",  desc = "Move forward a character" },
    { on = "<C-b>",     run = "move -1", desc = "Move back a character" },
    { on = "<C-f>",     run = "move 1",  desc = "Move forward a character" },

    # Word-wise movement
    { on = "b",     run = "backward",               desc = "Move back to the start of the current or previous word" },
    { on = "B",     run = "backward --far",              desc = "Move back to the start of the current or previous WORD" },
    { on = "w",     run = "forward",                desc = "Move forward to the start of the next word" },
    { on = "W",     run = "forward --far",               desc = "Move forward to the start of the next WORD" },
    { on = "e",     run = "forward --end-of-word",       desc = "Move forward to the end of the current or next word" },
    { on = "E",     run = "forward --far --end-of-word", desc = "Move forward to the end of the current or next WORD" },
    { on = "<A-b>", run = "backward",               desc = "Move back to the start of the current or previous word" },
    { on = "<A-f>", run = "forward --end-of-word",  desc = "Move forward to the end of the current or next word" },

    # Line-wise movement
    { on = "0",      run = "move bol",        desc = "Move to the BOL" },
    { on = "$",      run = "move eol",        desc = "Move to the EOL" },
    { on = "<C-j>",  run = "move bol",        desc = "Move to the BOL" },
    { on = "<C-l>",  run = "move eol",        desc = "Move to the EOL" },
    { on = "<Home>", run = "move bol",        desc = "Move to the BOL" },
    { on = "<End>",  run = "move eol",        desc = "Move to the EOL" },

    # Delete
    { on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
    { on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
    { on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
    { on = "<C-b>",       run = "backspace --under", desc = "Delete the character under the cursor" },

    # Kill
    { on = "<C-u>", run = "kill bol",       desc = "Kill backwards to the BOL" },
    { on = "<C-k>", run = "kill eol",       desc = "Kill forwards to the EOL" },
    { on = "<C-w>", run = "kill backward",  desc = "Kill backwards to the start of the current word" },
    { on = "<A-d>", run = "kill forward",   desc = "Kill forwards to the end of the current word" },

    # Cut/Yank/Paste
    { on = "d", run = "delete --cut",                                      desc = "Cut selected characters" },
    { on = "D", run = [ "delete --cut", "move eol" ],                      desc = "Cut until EOL" },
    { on = "c", run = "delete --cut --insert",                             desc = "Cut selected characters, and enter insert mode" },
    { on = "C", run = [ "delete --cut --insert", "move eol" ],             desc = "Cut until EOL, and enter insert mode" },
    { on = "s", run = [ "delete --cut --insert", "move 1" ],               desc = "Cut current character, and enter insert mode" },
    { on = "S", run = [ "move bol", "delete --cut --insert", "move eol" ], desc = "Cut from BOL until EOL, and enter insert mode" },
    { on = "x", run = [ "delete --cut", "move 1 --in-operating" ],         desc = "Cut current character" },
    { on = "y", run = "yank",                                              desc = "Copy selected characters" },
    { on = "p", run = "paste",                                             desc = "Paste copied characters after the cursor" },
    { on = "P", run = "paste --before",                                    desc = "Paste copied characters before the cursor" },

    # Undo/Redo
    { on = "u",     run = "undo", desc = "Undo the last operation" },
    { on = "<C-r>", run = "redo", desc = "Redo the last operation" },

    # Help
    { on = "?",     run = "help", desc = "Open help" },
    { on = "<F1>",  run = "help", desc = "Open help" },
]

# -----------------------------------------------------------------------------------------------------

[confirm]

keymap = [
    { on = "<Esc>",   run = "close",          desc = "Cancel the confirm" },
    { on = "<C-[>",   run = "close",          desc = "Cancel the confirm" },
    { on = "<C-c>",   run = "close",          desc = "Cancel the confirm" },
    { on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

    { on = "n", run = "close",          desc = "Cancel the confirm" },
    { on = "y", run = "close --submit", desc = "Submit the confirm" },

    { on = "i", run = "arrow prev", desc = "Previous line" },
    { on = "k", run = "arrow next", desc = "Next line" },

    { on = "<Up>",   run = "arrow prev", desc = "Previous line" },
    { on = "<Down>", run = "arrow next", desc = "Next line" },

    # Help
    { on = "?",    run = "help", desc = "Open help" },
    { on = "<F1>", run = "help", desc = "Open help" },
]

[cmp]

keymap = [
    { on = "<C-c>",   run = "close",                                      desc = "Cancel completion" },
    { on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
    { on = "<Enter>", run = [ "close --submit", "input:close --submit" ], desc = "Complete and submit the input" },

    { on = "<Up>",   run = "arrow prev", desc = "Previous item" },
    { on = "<Down>", run = "arrow next", desc = "Next item" },

    { on = "<C-i>", run = "arrow prev", desc = "Previous item" },
    { on = "<C-k>", run = "arrow next", desc = "Next item" },

    # Help
    { on = "?",    run = "help", desc = "Open help" },
    { on = "<F1>", run = "help", desc = "Open help" },
]

[help]

keymap = [
    { on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
    { on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },
    { on = "<C-c>", run = "close",  desc = "Hide the help" },
    { on = "q", run = "close", desc = "Exit the process" },

    # Navigation
    { on = "i", run = "arrow -1", desc = "Previous line" },
    { on = "k", run = "arrow 1",  desc = "Next line" },

    { on = "<Up>",   run = "arrow -1", desc = "Previous line" },
    { on = "<Down>", run = "arrow 1",  desc = "Next line" },

    # Filtering
    { on = "f", run = "filter", desc = "Filter help items" },

]
